package cn.iimedia.jb.rankingBrand

import android.os.Bundle
import android.support.v4.app.Fragment
import android.support.v4.content.ContextCompat
import android.view.View
import cn.iimedia.jb.R
import cn.iimedia.jb.common.HTTP_LOG_TAG
import cn.iimedia.jb.common.RANK_INFO_ID
import cn.iimedia.jb.http.APIConstants
import cn.iimedia.jb.http.bean.RankingBrandListBean
import cn.iimedia.jb.http.bean.RankingDetailBean
import cn.iimedia.jb.rankingBrand.adapter.BrandListAdapter
import cn.iimedia.jb.rankingBrand.adapter.RankingPagerAdapter
import cn.iimedia.jb.rankingBrand.fragment.FragmentGradeList
import cn.iimedia.jb.rankingBrand.scrollPage.PageBehavior
import com.xiong.appbase.base.BaseActivity
import com.xiong.appbase.custom.LinearLayoutManagerWrapper
import com.xiong.appbase.extension.addDivider
import com.xiong.appbase.http.RequestEngine
import com.xiong.appbase.social.SocialShareActivity
import com.xiong.appbase.utils.DLog
import com.xiong.appbase.utils.ELS
import com.xiong.appbase.utils.TimeTypeUtils
import kotlinx.android.synthetic.main.activity_ranking_brand.*
import kotlinx.android.synthetic.main.brand_layout.*
import kotlinx.android.synthetic.main.ranking_brand_top_bar.*
import kotlinx.android.synthetic.main.ranking_middle_layout.*
import kotlinx.android.synthetic.main.ranking_top_layout.*
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response

/**
 * Created by iiMedia on 2018/4/18.
 * 品牌榜单页
 */
class RankingBrandActivity : BaseActivity(), View.OnClickListener {
    var mFavor = false
    val mFragments = ArrayList<Fragment>()
    var id = 0
    var api: APIConstants? = null
    var els: ELS? = null

    override fun getLayoutId(): Int {
        return R.layout.activity_ranking_brand
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        api = RequestEngine.createService(APIConstants::class.java)
        els = ELS.getInstance()

        id = intent.extras.getInt(RANK_INFO_ID, 0)
        setTopEnabled(true, false)
        //设置上下翻页交互
        page_container?.setOnPageChanged(object : PageBehavior.OnPageChanged {
            override fun toTop() {
                setTopEnabled(true, false)
            }

            override fun toBottom() {
                setTopEnabled(false, true)
            }
        })
        //配置ViewPager
        val bundle = Bundle()
        bundle.putInt(RANK_INFO_ID, id)
        mFragments.add(FragmentGradeList.getInstance(bundle))
        mFragments.add(FragmentGradeList.getInstance(bundle))
        mFragments.add(FragmentGradeList.getInstance(bundle))
        mFragments.add(FragmentGradeList.getInstance(bundle))
        mFragments.add(FragmentGradeList.getInstance(bundle))

        vp.adapter = RankingPagerAdapter(supportFragmentManager, mFragments)
        tabs.setupWithViewPager(vp)

        getDetailData()
        getBrandData()
        addRelatedItem()
        back?.setOnClickListener(this)
        share?.setOnClickListener(this)
        favor?.setOnClickListener(this)
        fl_top_brand?.setOnClickListener(this)
        fl_top_ranking?.setOnClickListener(this)
    }

    private fun getDetailData() {
        val call = api?.getRankingDetail(id, els?.getStringData(ELS.IMEI))
        call?.enqueue(object : Callback<RankingDetailBean> {
            override fun onFailure(call: Call<RankingDetailBean>?, t: Throwable?) {
                DLog.w(HTTP_LOG_TAG, "榜单详情获取失败")
            }

            override fun onResponse(call: Call<RankingDetailBean>?, response: Response<RankingDetailBean>?) {
                val bean = response?.body()
                if (bean?.code == 1) {
                    val data = bean.data
                    ranking_name.setText(data.name)
                    tv_ranking_time.setText(TimeTypeUtils.timestamp2yyyyMMdd(data.updateTime.toLong()))
                }
            }
        })
    }

    //获取品牌列表
    private fun getBrandData() {
        val manager = LinearLayoutManagerWrapper(mActivity)
        manager.isAutoMeasureEnabled = true
        brand_list?.layoutManager = manager
        brand_list?.addDivider(mActivity, R.drawable.vertical_gray_divider)
        brand_list?.isNestedScrollingEnabled = false
        brand_list?.setHasFixedSize(true)
        val call = api?.getRankingBrandDetail(id, els?.getStringData(ELS.IMEI))
        call?.enqueue(object : Callback<RankingBrandListBean> {
            override fun onResponse(call: Call<RankingBrandListBean>?, response: Response<RankingBrandListBean>?) {
                val bean = response?.body()
                if (bean?.code == 1) {
                    val brandList = bean.data.brands
                    brand_list?.adapter = BrandListAdapter(mActivity, brandList)
                }
            }

            override fun onFailure(call: Call<RankingBrandListBean>?, t: Throwable?) {
                DLog.w(HTTP_LOG_TAG, "榜单品牌详情获取失败")
            }
        })

    }

    override fun onClick(v: View?) {
        when (v?.id) {
            R.id.back -> finish()
            R.id.share -> SocialShareActivity.intentTo(mActivity)
            R.id.favor -> updateFavorButton()
            R.id.fl_top_brand -> {
                setTopEnabled(false, true)
                page_container?.scrollToBottom()
            }
            R.id.fl_top_ranking -> {
                setTopEnabled(true, false)
                page_container?.backToTop()
            }

        }
    }

    private fun setTopEnabled(rankingFlag: Boolean, brandFlag: Boolean) {
        if (rankingFlag) {
            iv_top_ranking.visibility = View.VISIBLE
            tv_top_ranking.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color2))

        } else {
            iv_top_ranking.visibility = View.GONE
            tv_top_ranking.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color1))
        }
        if (brandFlag) {
            iv_top_brand.visibility = View.VISIBLE
            tv_top_brand.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color2))
        } else {
            iv_top_brand.visibility = View.GONE
            tv_top_brand.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color1))
        }
    }

    private fun updateFavorButton() {
        if (mFavor) {
            favor.setText("关注")
            favor.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color2))
            favor.setBackgroundResource(R.drawable.ranking_btn_drawable)
        } else {
            favor.setText("已关注")
            favor.setTextColor(ContextCompat.getColor(mActivity, R.color.white))
            favor.setBackgroundResource(R.drawable.ranking_btn_drawable2)
        }
        mFavor = !mFavor
    }

    private fun addRelatedItem() {
        //相关榜单添加item
//        for (i in 0 until 5) {
//            float_layout.addView(MyUtils.createRelatedItem(mActivity, "婴儿奶嘴"))
//        }
    }
}