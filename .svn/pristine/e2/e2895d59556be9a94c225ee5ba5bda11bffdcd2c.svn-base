package cn.iimedia.jb.rankingBrand

import android.os.Bundle
import android.support.v4.content.ContextCompat
import android.support.v4.widget.NestedScrollView
import android.support.v7.widget.GridLayoutManager
import android.view.View
import cn.iimedia.jb.R
import cn.iimedia.jb.common.BRAND_ID
import cn.iimedia.jb.common.HTTP_LOG_TAG
import cn.iimedia.jb.http.APIConstants
import cn.iimedia.jb.http.bean.BrandDetailBean
import cn.iimedia.jb.http.bean.RankingSelectBean
import cn.iimedia.jb.rankingBrand.adapter.BrandGoodsAdapter
import cn.iimedia.jb.rankingBrand.adapter.BrandSelectRankingAdapter
import com.xiong.appbase.base.BaseActivity
import com.xiong.appbase.custom.LinearLayoutManagerWrapper
import com.xiong.appbase.extension.addDivider
import com.xiong.appbase.extension.addGridDivider
import com.xiong.appbase.extension.loadImageFit
import com.xiong.appbase.http.RequestEngine
import com.xiong.appbase.social.SocialShareActivity
import com.xiong.appbase.utils.DLog
import com.xiong.appbase.utils.ELS
import kotlinx.android.synthetic.main.activity_brand_detail.*
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response

/**
 * Created by iiMedia on 2018/4/26.
 * 品牌详情页
 */
class BrandDetailActivity : BaseActivity(), View.OnClickListener {
    val TAG = "BrandDetailActivity"
    var api: APIConstants? = null
    var els: ELS? = null
    var brandId = 0
    var mFavor = false

    override fun getLayoutId(): Int {
        return R.layout.activity_brand_detail
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        api = RequestEngine.createService(APIConstants::class.java)
        els = ELS.getInstance()
        brandId = intent.extras.getInt(BRAND_ID)
        top_img_logo.visibility = View.GONE
        getDetail()
        getSelectList()

        goods_list?.layoutManager = GridLayoutManager(mActivity, 2)
        goods_list?.isNestedScrollingEnabled = false
        goods_list?.addGridDivider(mActivity, 32)
        goods_list?.adapter = BrandGoodsAdapter(mActivity)

        back?.setOnClickListener(this)
        share?.setOnClickListener(this)
        collect?.setOnClickListener(this)

        //大LOGO滑出屏幕时显示头部小LOGO
        scroll.setOnScrollChangeListener(object : NestedScrollView.OnScrollChangeListener {
            override fun onScrollChange(v: NestedScrollView?, scrollX: Int, scrollY: Int, oldScrollX: Int, oldScrollY: Int) {
                val imgLogoHalfHeight = img_logo.bottom / 2
                val imgLogoHeight = img_logo.bottom

                if (scrollY < imgLogoHalfHeight) {
                    top_img_logo.visibility = View.GONE
                } else if (scrollY >= imgLogoHalfHeight && scrollY <= imgLogoHeight) {
                    top_img_logo.visibility = View.VISIBLE
                    top_img_logo.alpha = (scrollY - imgLogoHalfHeight) / (imgLogoHeight - imgLogoHalfHeight).toFloat()
//                    DLog.w(TAG,"alpha ${top_img_logo.alpha}")
                }
//                DLog.w(TAG, "bottom:${img_logo.bottom} height:${img_logo.height}" +
//                        " measuredHeight${img_logo.measuredHeight} scrollY:${scrollY}")
            }
        })
//        for (i in 0 until 5) {
//            float_layout?.addView(MyUtils.createRelatedItem(mActivity, "婴儿奶嘴"))
//        }
    }

    //获取详情数据
    private fun getDetail() {
        val call = api?.getBrandDetail(brandId, els?.getStringData(ELS.IMEI))
        call?.enqueue(object : Callback<BrandDetailBean> {
            override fun onFailure(call: Call<BrandDetailBean>?, t: Throwable?) {
                DLog.w(HTTP_LOG_TAG, "品牌详情获取失败")
            }

            override fun onResponse(call: Call<BrandDetailBean>?, response: Response<BrandDetailBean>?) {
                val bean = response?.body()
                if (bean?.code == 1) {
                    val data = bean.data
                    img_logo.loadImageFit(data.colorLogo)
                    top_img_logo.loadImageFit(data.colorLogo)
                    brand_name.setText(data.brandName)

                    val year = data.estTime
                    if (year.contains("年")) {
                        brand_year.setText("始于${data.estTime}")
                    } else {
                        brand_year.setText("始于${data.estTime}年")
                    }
                }
            }
        })
    }

    //获取入选榜单
    private fun getSelectList() {
        select_list?.layoutManager = LinearLayoutManagerWrapper(mActivity)
        select_list?.isNestedScrollingEnabled = false
        select_list?.addDivider(mActivity, R.drawable.vertical_white_divider_8dp)

        val call = api?.getBrandSelect(brandId, 0, 10, els?.getStringData(ELS.IMEI))
        call?.enqueue(object : Callback<RankingSelectBean> {
            override fun onResponse(call: Call<RankingSelectBean>?, response: Response<RankingSelectBean>?) {
                val bean = response?.body()
                if (bean?.code == 1) {
                    val dataList = bean.data
                    if (dataList.isNotEmpty()) {
                        select_list?.adapter = BrandSelectRankingAdapter(mActivity, dataList)
                    }
                }
            }

            override fun onFailure(call: Call<RankingSelectBean>?, t: Throwable?) {
                DLog.w(HTTP_LOG_TAG, "入选榜单获取失败")
            }
        })
    }

    private fun updateFavorButton() {
        if (mFavor) {
            collect.setText("收藏")
            collect.setTextColor(ContextCompat.getColor(mActivity, R.color.text_color2))
            collect.setBackgroundResource(R.drawable.ranking_btn_drawable)
        } else {
            collect.setText("已收藏")
            collect.setTextColor(ContextCompat.getColor(mActivity, R.color.white))
            collect.setBackgroundResource(R.drawable.ranking_btn_drawable2)
        }
        mFavor = !mFavor
    }

    override fun onClick(v: View?) {
        when (v?.id) {
            R.id.back -> finish()
            R.id.share -> SocialShareActivity.intentTo(mActivity)
            R.id.collect -> updateFavorButton()
        }
    }
}