package com.myxianwen.share;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;

import com.myxianwen.social_sdk.R;
import com.sina.weibo.sdk.api.TextObject;
import com.sina.weibo.sdk.api.WebpageObject;
import com.sina.weibo.sdk.api.WeiboMultiMessage;
import com.sina.weibo.sdk.api.share.IWeiboShareAPI;
import com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest;
import com.sina.weibo.sdk.api.share.WeiboShareSDK;
import com.sina.weibo.sdk.auth.AuthInfo;
import com.sina.weibo.sdk.auth.Oauth2AccessToken;
import com.sina.weibo.sdk.auth.WeiboAuthListener;
import com.sina.weibo.sdk.exception.WeiboException;
import com.sina.weibo.sdk.utils.Utility;

/**
 * Created by iiMedia on 2016/6/13.
 */
public class ShareSina {
    private Activity mActivity;
    /** 微博微博分享接口实例 */
    private IWeiboShareAPI mWeiboShareAPI = null;
    private boolean isInstalledWeibo;

    public static final int TYPE_NULL = 0;
    public static final int TYPE_WEBPAGE = 1;
    public static final int TYPE_VIDEO = 2;

    public IWeiboShareAPI init(Activity activity) {
        mActivity = activity;

        // 创建微博分享接口实例
        mWeiboShareAPI = WeiboShareSDK.createWeiboAPI(activity, Constants.APP_KEY);

        isInstalledWeibo = mWeiboShareAPI.isWeiboAppInstalled();

        // 注册第三方应用到微博客户端中，注册成功后该应用将显示在微博的应用列表中。
        // 但该附件栏集成分享权限需要合作申请，详情请查看 Demo 提示
        // NOTE：请务必提前注册，即界面初始化的时候或是应用程序初始化时，进行注册
        mWeiboShareAPI.registerApp();

        return mWeiboShareAPI;
    }

    public void onDestroy() {
        mActivity = null;
        mWeiboShareAPI = null;
    }

    /**
     * 第三方应用发送请求消息到微博，唤起微博分享界面。
     * 注意：当 {@link IWeiboShareAPI#getWeiboAppSupportAPI()} >= 10351 时，支持同时分享多条消息，
     * 同时可以分享文本、图片以及其它媒体资源（网页、音乐、视频、声音中的一种）。
     *
     * Text    分享的内容是否有文本
     * Image   分享的内容是否有图片
     * Webpage 分享的内容是否有网页
     * Music   分享的内容是否有音乐
     * Video   分享的内容是否有视频
     * Voice   分享的内容是否有声音
     */
    public void sendMultiMessage(String url, String title, String content, String image) {

        // 1. 初始化微博的分享消息
        WeiboMultiMessage weiboMessage = new WeiboMultiMessage();
//        if (hasText) {
//            weiboMessage.textObject = getTextObj();
//        }
//        if (hasImage) {
//            weiboMessage.imageObject = getImageObj();
//        }
        // 用户可以分享其它媒体资源（网页、音乐、视频、声音中的一种）
//        if (hasMusic) {
//            weiboMessage.mediaObject = getMusicObj();
//        }
//        if (hasVideo) {
//            weiboMessage.mediaObject = getVideoObj();
//        }
//        if (hasVoice) {
//            weiboMessage.mediaObject = getVoiceObj();
//        }
        if(isInstalledWeibo) {
            weiboMessage.textObject = getTextObjWithoutUrl(title, content);
            weiboMessage.mediaObject = getWebpageObj(url, title, content, image);
        } else {
            weiboMessage.textObject = getTextObj(url, title, content);
        }

        // 2. 初始化从第三方到微博的消息请求
        SendMultiMessageToWeiboRequest request = new SendMultiMessageToWeiboRequest();
        // 用transaction唯一标识一个请求
        request.transaction = String.valueOf(System.currentTimeMillis());
        request.multiMessage = weiboMessage;

        // 3. 发送请求消息到微博，唤起微博分享界面
        AuthInfo authInfo = new AuthInfo(mActivity, Constants.APP_KEY, Constants.REDIRECT_URL, Constants.SCOPE);
        Oauth2AccessToken accessToken = AccessTokenKeeper.readAccessToken(mActivity.getApplicationContext());
        String token = "";
        if (accessToken != null) {
            token = accessToken.getToken();
        }
        mWeiboShareAPI.sendRequest(mActivity, request, authInfo, token, new WeiboAuthListener() {

            @Override
            public void onWeiboException( WeiboException arg0 ) {
//                Toast.makeText(mActivity.getApplicationContext(), arg0.toString(), Toast.LENGTH_SHORT).show();
                return;
            }

            @Override
            public void onComplete( Bundle bundle ) {
                Oauth2AccessToken newToken = Oauth2AccessToken.parseAccessToken(bundle);
                AccessTokenKeeper.writeAccessToken(mActivity.getApplicationContext(), newToken);
//                Toast.makeText(mActivity.getApplicationContext(), "onAuthorizeComplete token = " + newToken.getToken(), Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onCancel() {
                return;
            }
        });
    }


    /**
     * 创建文本消息对象。
     *
     * @return 文本消息对象。
     */
    public TextObject getTextObj(String url, String title , String content) {
        TextObject textObject = new TextObject();
        String format = mActivity.getString(R.string.weibosdk_demo_share_webpage_template);
        textObject.text = String.format(format, title, content, url, AppUtils.getPostfix());
        return textObject;
    }
    public TextObject getTextObjWithoutUrl(String title , String content) {
        TextObject textObject = new TextObject();
        String format = mActivity.getString(R.string.weibosdk_demo_share_webpage_template_without_url);
        textObject.text = String.format(format, title ,content, AppUtils.getPostfix());
        return textObject;
    }

    /**
     * 创建图片消息对象。
     *
     * @return 图片消息对象。
     */
//    private ImageObject getImageObj() {
//        ImageObject imageObject = new ImageObject();
//        BitmapDrawable bitmapDrawable = (BitmapDrawable) mImageView.getDrawable();
//        //设置缩略图。 注意：最终压缩过的缩略图大小不得超过 32kb。
//        Bitmap bitmap = BitmapFactory.decodeResource(mActivity.getResources(), R.drawable.ic_logo);
//        imageObject.setImageObject(bitmap);
//        return imageObject;
//    }

    /**
     * 创建多媒体（网页）消息对象。
     *
     * @return 多媒体（网页）消息对象。
     */
    public WebpageObject getWebpageObj(String url, String title, String content, String image) {
        WebpageObject mediaObject = new WebpageObject();
        mediaObject.identify = Utility.generateGUID();
        mediaObject.title = title;
        mediaObject.description = content;

        int _image = AppUtils.isNanguoZaobao() ? R.drawable.tempdefault1 : R.drawable.tempdefault;

        Bitmap bitmap = BitmapFactory.decodeResource(mActivity.getResources(), _image);
        // 设置 Bitmap 类型的图片到视频对象里         设置缩略图。 注意：最终压缩过的缩略图大小不得超过 32kb。
        mediaObject.setThumbImage(bitmap);
        mediaObject.actionUrl = url;
        mediaObject.defaultText = title;
        return mediaObject;
    }

    /**
     * 创建多媒体（音乐）消息对象。
     *
     * @return 多媒体（音乐）消息对象。
     */
//    private MusicObject getMusicObj() {
//        // 创建媒体消息
//        MusicObject musicObject = new MusicObject();
//        musicObject.identify = Utility.generateGUID();
//        musicObject.title = mShareMusicView.getTitle();
//        musicObject.description = mShareMusicView.getShareDesc();
//
//        Bitmap  bitmap = BitmapFactory.decodeResource(mActivity.getResources(), R.drawable.ic_logo);
//        // 设置 Bitmap 类型的图片到视频对象里        设置缩略图。 注意：最终压缩过的缩略图大小不得超过 32kb。
//        musicObject.setThumbImage(bitmap);
//        musicObject.actionUrl = mShareMusicView.getShareUrl();
//        musicObject.dataUrl = "www.weibo.com";
//        musicObject.dataHdUrl = "www.weibo.com";
//        musicObject.duration = 10;
//        musicObject.defaultText = "Music 默认文案";
//        return musicObject;
//    }

    /**
     * 创建多媒体（视频）消息对象。
     *
     * @return 多媒体（视频）消息对象。
     */
//    public static VideoObject getVideoObj(String url, String title, String content, String image, String videopath) {
//        // 创建媒体消息
//        VideoObject videoObject = new VideoObject();
//        videoObject.identify = Utility.generateGUID();
//        videoObject.title = title;
//        videoObject.description = content;
//        Bitmap bitmap = BitmapFactory.decodeResource(mActivity.getResources(), R.drawable.temp);
//
//        videoObject.setThumbImage(bitmap);
//        videoObject.actionUrl = url;
//        videoObject.dataUrl = videopath;
//        videoObject.dataHdUrl = videopath;
//        videoObject.duration = 10;
//        videoObject.defaultText = "Vedio 默认文案";
//        return videoObject;
//    }

    /**
     * 创建多媒体（音频）消息对象。
     *
     * @return 多媒体（音乐）消息对象。
     */
//    private VoiceObject getVoiceObj() {
//        // 创建媒体消息
//        VoiceObject voiceObject = new VoiceObject();
//        voiceObject.identify = Utility.generateGUID();
//        voiceObject.title = mShareVoiceView.getTitle();
//        voiceObject.description = mShareVoiceView.getShareDesc();
//        Bitmap  bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.ic_logo);
//        // 设置 Bitmap 类型的图片到视频对象里      设置缩略图。 注意：最终压缩过的缩略图大小不得超过 32kb。
//        voiceObject.setThumbImage(bitmap);
//        voiceObject.actionUrl = mShareVoiceView.getShareUrl();
//        voiceObject.dataUrl = "www.weibo.com";
//        voiceObject.dataHdUrl = "www.weibo.com";
//        voiceObject.duration = 10;
//        voiceObject.defaultText = "Voice 默认文案";
//        return voiceObject;
//    }
}
